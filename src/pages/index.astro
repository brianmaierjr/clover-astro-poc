---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import { Image } from 'astro:assets';
const response = await fetch('https://cloverlearning.com/api/courses');
const data = await response.json();
const courses = data.courses; 
---

<Layout title="Welcome to Astro.">
	<main>
		<h1>Welcome to my P.O.C for <span class="text-gradient">Astro</span></h1>
		<p class="instructions">
			This page is using the Clover API to grab the courses and statically spits it out. 
		</p>
		<ul role="list" class="link-card-grid">
			{ courses.map((course: any) => (
			<Card
				href={`https://cloverlearning.com/courses/${course.slug}`}
			>
				<Image src={course.asset} alt="" width="285" height="171"/>
				<h2>{course.title}</h2>
				{ course.lesson_count && 
					<p>{ course.lesson_count} Lessons</p>
				}
				{ course.ce_credit_hours && 
					<p>{course.ce_credit_hours} Credits</p>
				}
			</Card>
			))
			}
		</ul>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
